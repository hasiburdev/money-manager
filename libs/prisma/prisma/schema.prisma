generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

enum Subscriptions {
  FREE
  PREMIUM
}

enum Status {
  PENDING
  CLEARED
}

enum AccountType {
  CASH
  CARD
  SAVINGS
}

enum CategoryType {
  EXPENSE
  INCOME
}

model User {
  email              String         @unique
  firstName          String?
  lastName           String?
  hashedPassword     String?
  dateOfBirth        DateTime?
  gender             Gender?
  avatarUrl          String?
  accounts           Account[]
  id                 String         @id @default(uuid())
  records            Record[]
  subscription       Subscriptions?
  subscriptionExpiry DateTime?
}

model Account {
  id                   String      @id @default(uuid())
  user                 User?       @relation(fields: [userId], references: [id])
  userId               String?
  records              Record[]
  currency             String      @default("USD")
  name                 String
  icon                 String?
  includeInMainBalance Boolean     @default(true)
  amount               Int
  accountType          AccountType
}

model Category {
  id            String        @id @default(uuid())
  name          String
  color         String?
  icon          String?
  type          CategoryType
  subCategories SubCategory[]
}

model SubCategory {
  id         String    @id @default(uuid())
  name       String
  color      String?
  icon       String?
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?
}

model Tag {
  id    String  @id @default(uuid())
  name  String
  color String?
}

model Record {
  id        String   @id @default(uuid())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  account   Account? @relation(fields: [accountId], references: [id])
  accountId String?
  amount    Int
  date      DateTime
  note      String?
  currency  String
  status    Status
  place     String?
  warrenty  Int
}
